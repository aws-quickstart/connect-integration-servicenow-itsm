{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "ServiceNow Incident Management Stack - Connect integration for Service Now! incident management",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "ServiceNow Incident Management Parameters"
                    },
                    "Parameters": [
                        "ConnectInstanceId",
                        "ServiceNowUserName",
                        "ServiceNowPassword",
                        "ServiceNowHost"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "ServiceNowUserName": {
            "Description": "ServiceNow User Name.",
            "Type": "String"
        },
        "ServiceNowPassword": {
            "Description": "ServiceNow Password.",
            "Type": "String"
        },
        "ServiceNowHost": {
            "Description": "ServiceNow Host.",
            "Type": "String"
        },
        "ConnectInstanceId": {
            "AllowedPattern": "[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}",
            "Description": "ID of your Connect Instance. Contains Upper and Lower case letters, Numbers and Dashes (-).",
            "Type": "String"
        }
    },
    "Resources": {
        "CreateIncidentMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ResourceId": {
                    "Ref": "CreateIncidentResource"
                },
                "HttpMethod": "POST",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateIncident.Arn}/invocations"
                    }
                }
            }
        },
        "CreateIncidentResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "ITSMAPI",
                        "RootResourceId"
                    ]
                },
                "PathPart": "CreateIncident"
            }
        },
        "CreateIncidentApiPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "CreateIncident",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ITSMAPI"
                            },
                            "/*"
                        ]
                    ]
                }
            }
        },
        "ServiceNowCreateIncidentConnectPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowCreateIncident",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": "function:ServiceNowCreateIncident",
                "Principal": "connect.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:connect:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":instance/",
                            {
                                "Ref": "ConnectInstanceId"
                            }
                        ]
                    ]
                }
            }
        },
        "ServiceNowCreateIncidentExecutionPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "ServiceNowCreateIncidentExecutionPolicy",
                "Roles": [
                    {
                        "Ref": "ServiceNowCreateIncidentExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:logs:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/ServiceNowCreateIncident:*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "ServiceNowCreateIncidentExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "RoleName": "ServiceNowCreateIncidentExecutionRole"
            }
        },
        "ServiceNowCreateIncident": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "tom.huguenard",
                    "S3Key": "connect-integration-servicenow-itsm/functions/packages/CreateIncident/lambda.zip"
                },
                "Description": "ServiceNow CreateIncident",
                "Environment": {
                    "Variables": {
                        "SERVICENOW_USERNAME": {
                            "Fn::Sub": "${ServiceNowUserName}"
                        },
                        "SERVICENOW_HOST": {
                            "Fn::Sub": "${ServiceNowHost}"
                        },
                        "SERVICENOW_PASSWORD": {
                            "Fn::Sub": "${ServiceNowPassword}"
                        }
                    }
                },
                "FunctionName": "ServiceNowCreateIncident",
                "Handler": "index.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "ServiceNowCreateIncidentExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 10,
                "Runtime": "nodejs6.10"
            }
        },
        "KeepServiceNowCreateIncidentWarmEventRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": "ServiceNowCreateIncident",
            "Properties": {
                "Description": "Keeps the lambdas warm by pinging them every (n)minutes.",
                "ScheduleExpression": "rate(10 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "ServiceNowCreateIncident",
                                "Arn"
                            ]
                        },
                        "Id": "ServiceNowCreateIncident",
                        "Input": "{\"keepwarm\": true}"
                    }
                ]
            }
        },
        "PermissionForServiceNowCreateIncidentEventRuleToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowCreateIncident",
            "Properties": {
                "FunctionName": {
                    "Ref": "ServiceNowCreateIncident"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "KeepServiceNowCreateIncidentWarmEventRule",
                        "Arn"
                    ]
                }
            }
        },
        "CreateIncidentByPhoneMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ResourceId": {
                    "Ref": "CreateIncidentByPhoneResource"
                },
                "HttpMethod": "POST",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateIncidentByPhone.Arn}/invocations"
                    }
                }
            }
        },
        "CreateIncidentByPhoneResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "ITSMAPI",
                        "RootResourceId"
                    ]
                },
                "PathPart": "CreateIncidentByPhone"
            }
        },
        "CreateIncidentByPhoneApiPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "CreateIncidentByPhone",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ITSMAPI"
                            },
                            "/*"
                        ]
                    ]
                }
            }
        },
        "ServiceNowCreateIncidentByPhoneConnectPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowCreateIncidentByPhone",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": "function:ServiceNowCreateIncidentByPhone",
                "Principal": "connect.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:connect:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":instance/",
                            {
                                "Ref": "ConnectInstanceId"
                            }
                        ]
                    ]
                }
            }
        },
        "ServiceNowCreateIncidentByPhoneExecutionPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "ServiceNowCreateIncidentByPhoneExecutionPolicy",
                "Roles": [
                    {
                        "Ref": "ServiceNowCreateIncidentByPhoneExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:logs:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/ServiceNowCreateIncidentByPhone:*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "ServiceNowCreateIncidentByPhoneExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "RoleName": "ServiceNowCreateIncidentByPhoneExecutionRole"
            }
        },
        "ServiceNowCreateIncidentByPhone": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "tom.huguenard",
                    "S3Key": "connect-integration-servicenow-itsm/functions/packages/CreateIncidentByPhone/lambda.zip"
                },
                "Description": "ServiceNow CreateIncidentByPhone",
                "Environment": {
                    "Variables": {
                        "SERVICENOW_USERNAME": {
                            "Fn::Sub": "${ServiceNowUserName}"
                        },
                        "SERVICENOW_HOST": {
                            "Fn::Sub": "${ServiceNowHost}"
                        },
                        "SERVICENOW_PASSWORD": {
                            "Fn::Sub": "${ServiceNowPassword}"
                        }
                    }
                },
                "FunctionName": "ServiceNowCreateIncidentByPhone",
                "Handler": "index.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "ServiceNowCreateIncidentByPhoneExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 10,
                "Runtime": "nodejs6.10"
            }
        },
        "KeepServiceNowCreateIncidentByPhoneWarmEventRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": "ServiceNowCreateIncidentByPhone",
            "Properties": {
                "Description": "Keeps the lambdas warm by pinging them every (n)minutes.",
                "ScheduleExpression": "rate(10 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "ServiceNowCreateIncidentByPhone",
                                "Arn"
                            ]
                        },
                        "Id": "ServiceNowCreateIncidentByPhone",
                        "Input": "{\"keepwarm\": true}"
                    }
                ]
            }
        },
        "PermissionForServiceNowCreateIncidentByPhoneEventRuleToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowCreateIncidentByPhone",
            "Properties": {
                "FunctionName": {
                    "Ref": "ServiceNowCreateIncidentByPhone"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "KeepServiceNowCreateIncidentByPhoneWarmEventRule",
                        "Arn"
                    ]
                }
            }
        },
        "GetIncidentByPhoneMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ResourceId": {
                    "Ref": "GetIncidentByPhoneResource"
                },
                "HttpMethod": "POST",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIncidentByPhone.Arn}/invocations"
                    }
                }
            }
        },
        "GetIncidentByPhoneResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "ITSMAPI",
                        "RootResourceId"
                    ]
                },
                "PathPart": "GetIncidentByPhone"
            }
        },
        "GetIncidentByPhoneApiPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetIncidentByPhone",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ITSMAPI"
                            },
                            "/*"
                        ]
                    ]
                }
            }
        },
        "ServiceNowGetIncidentByPhoneConnectPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowGetIncidentByPhone",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": "function:ServiceNowGetIncidentByPhone",
                "Principal": "connect.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:connect:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":instance/",
                            {
                                "Ref": "ConnectInstanceId"
                            }
                        ]
                    ]
                }
            }
        },
        "ServiceNowGetIncidentByPhoneExecutionPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "ServiceNowGetIncidentByPhoneExecutionPolicy",
                "Roles": [
                    {
                        "Ref": "ServiceNowGetIncidentByPhoneExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:logs:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/ServiceNowGetIncidentByPhone:*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "ServiceNowGetIncidentByPhoneExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "RoleName": "ServiceNowGetIncidentByPhoneExecutionRole"
            }
        },
        "ServiceNowGetIncidentByPhone": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "tom.huguenard",
                    "S3Key": "connect-integration-servicenow-itsm/functions/packages/GetIncidentByPhone/lambda.zip"
                },
                "Description": "ServiceNow GetIncidentByPhone",
                "Environment": {
                    "Variables": {
                        "SERVICENOW_USERNAME": {
                            "Fn::Sub": "${ServiceNowUserName}"
                        },
                        "SERVICENOW_HOST": {
                            "Fn::Sub": "${ServiceNowHost}"
                        },
                        "SERVICENOW_PASSWORD": {
                            "Fn::Sub": "${ServiceNowPassword}"
                        }
                    }
                },
                "FunctionName": "ServiceNowGetIncidentByPhone",
                "Handler": "index.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "ServiceNowGetIncidentByPhoneExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 10,
                "Runtime": "nodejs6.10"
            }
        },
        "KeepServiceNowGetIncidentByPhoneWarmEventRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": "ServiceNowGetIncidentByPhone",
            "Properties": {
                "Description": "Keeps the lambdas warm by pinging them every (n)minutes.",
                "ScheduleExpression": "rate(10 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "ServiceNowGetIncidentByPhone",
                                "Arn"
                            ]
                        },
                        "Id": "ServiceNowGetIncidentByPhone",
                        "Input": "{\"keepwarm\": true}"
                    }
                ]
            }
        },
        "PermissionForServiceNowGetIncidentByPhoneEventRuleToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowGetIncidentByPhone",
            "Properties": {
                "FunctionName": {
                    "Ref": "ServiceNowGetIncidentByPhone"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "KeepServiceNowGetIncidentByPhoneWarmEventRule",
                        "Arn"
                    ]
                }
            }
        },
        "GetIncidentStateMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ResourceId": {
                    "Ref": "GetIncidentStateResource"
                },
                "HttpMethod": "POST",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIncidentState.Arn}/invocations"
                    }
                }
            }
        },
        "GetIncidentStateResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "ITSMAPI",
                        "RootResourceId"
                    ]
                },
                "PathPart": "GetIncidentState"
            }
        },
        "GetIncidentStateApiPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetIncidentState",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ITSMAPI"
                            },
                            "/*"
                        ]
                    ]
                }
            }
        },
        "ServiceNowGetIncidentStateConnectPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowGetIncidentState",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": "function:ServiceNowGetIncidentState",
                "Principal": "connect.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:connect:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":instance/",
                            {
                                "Ref": "ConnectInstanceId"
                            }
                        ]
                    ]
                }
            }
        },
        "ServiceNowGetIncidentStateExecutionPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "ServiceNowGetIncidentStateExecutionPolicy",
                "Roles": [
                    {
                        "Ref": "ServiceNowGetIncidentStateExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:logs:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/ServiceNowGetIncidentState:*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "ServiceNowGetIncidentStateExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "RoleName": "ServiceNowGetIncidentStateExecutionRole"
            }
        },
        "ServiceNowGetIncidentState": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "tom.huguenard",
                    "S3Key": "connect-integration-servicenow-itsm/functions/packages/GetIncidentState/lambda.zip"
                },
                "Description": "ServiceNow GetIncidentState",
                "Environment": {
                    "Variables": {
                        "SERVICENOW_USERNAME": {
                            "Fn::Sub": "${ServiceNowUserName}"
                        },
                        "SERVICENOW_HOST": {
                            "Fn::Sub": "${ServiceNowHost}"
                        },
                        "SERVICENOW_PASSWORD": {
                            "Fn::Sub": "${ServiceNowPassword}"
                        }
                    }
                },
                "FunctionName": "ServiceNowGetIncidentState",
                "Handler": "index.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "ServiceNowGetIncidentStateExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 10,
                "Runtime": "nodejs6.10"
            }
        },
        "KeepServiceNowGetIncidentStateWarmEventRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": "ServiceNowGetIncidentState",
            "Properties": {
                "Description": "Keeps the lambdas warm by pinging them every (n)minutes.",
                "ScheduleExpression": "rate(10 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "ServiceNowGetIncidentState",
                                "Arn"
                            ]
                        },
                        "Id": "ServiceNowGetIncidentState",
                        "Input": "{\"keepwarm\": true}"
                    }
                ]
            }
        },
        "PermissionForServiceNowGetIncidentStateEventRuleToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowGetIncidentState",
            "Properties": {
                "FunctionName": {
                    "Ref": "ServiceNowGetIncidentState"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "KeepServiceNowGetIncidentStateWarmEventRule",
                        "Arn"
                    ]
                }
            }
        },
        "GetLatestStateByPhoneMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ResourceId": {
                    "Ref": "GetLatestStateByPhoneResource"
                },
                "HttpMethod": "POST",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetLatestStateByPhone.Arn}/invocations"
                    }
                }
            }
        },
        "GetLatestStateByPhoneResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "ITSMAPI",
                        "RootResourceId"
                    ]
                },
                "PathPart": "GetLatestStateByPhone"
            }
        },
        "GetLatestStateByPhoneApiPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetLatestStateByPhone",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ITSMAPI"
                            },
                            "/*"
                        ]
                    ]
                }
            }
        },
        "ServiceNowGetLatestStateByPhoneConnectPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowGetLatestStateByPhone",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": "function:ServiceNowGetLatestStateByPhone",
                "Principal": "connect.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:connect:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":instance/",
                            {
                                "Ref": "ConnectInstanceId"
                            }
                        ]
                    ]
                }
            }
        },
        "ServiceNowGetLatestStateByPhoneExecutionPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "ServiceNowGetLatestStateByPhoneExecutionPolicy",
                "Roles": [
                    {
                        "Ref": "ServiceNowGetLatestStateByPhoneExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:logs:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/ServiceNowGetLatestStateByPhone:*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "ServiceNowGetLatestStateByPhoneExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "RoleName": "ServiceNowGetLatestStateByPhoneExecutionRole"
            }
        },
        "ServiceNowGetLatestStateByPhone": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "tom.huguenard",
                    "S3Key": "connect-integration-servicenow-itsm/functions/packages/GetLatestStateByPhone/lambda.zip"
                },
                "Description": "ServiceNow GetLatestStateByPhone",
                "Environment": {
                    "Variables": {
                        "SERVICENOW_USERNAME": {
                            "Fn::Sub": "${ServiceNowUserName}"
                        },
                        "SERVICENOW_HOST": {
                            "Fn::Sub": "${ServiceNowHost}"
                        },
                        "SERVICENOW_PASSWORD": {
                            "Fn::Sub": "${ServiceNowPassword}"
                        }
                    }
                },
                "FunctionName": "ServiceNowGetLatestStateByPhone",
                "Handler": "index.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "ServiceNowGetLatestStateByPhoneExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 10,
                "Runtime": "nodejs6.10"
            }
        },
        "KeepServiceNowGetLatestStateByPhoneWarmEventRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": "ServiceNowGetLatestStateByPhone",
            "Properties": {
                "Description": "Keeps the lambdas warm by pinging them every (n)minutes.",
                "ScheduleExpression": "rate(10 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "ServiceNowGetLatestStateByPhone",
                                "Arn"
                            ]
                        },
                        "Id": "ServiceNowGetLatestStateByPhone",
                        "Input": "{\"keepwarm\": true}"
                    }
                ]
            }
        },
        "PermissionForServiceNowGetLatestStateByPhoneEventRuleToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowGetLatestStateByPhone",
            "Properties": {
                "FunctionName": {
                    "Ref": "ServiceNowGetLatestStateByPhone"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "KeepServiceNowGetLatestStateByPhoneWarmEventRule",
                        "Arn"
                    ]
                }
            }
        },
        "integration-testMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ResourceId": {
                    "Ref": "integration-testResource"
                },
                "HttpMethod": "POST",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${integration-test.Arn}/invocations"
                    }
                }
            }
        },
        "integration-testResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "ITSMAPI"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "ITSMAPI",
                        "RootResourceId"
                    ]
                },
                "PathPart": "integration-test"
            }
        },
        "integration-testApiPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "integration-test",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ITSMAPI"
                            },
                            "/*"
                        ]
                    ]
                }
            }
        },
        "ServiceNowintegration-testConnectPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowintegration-test",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": "function:ServiceNowintegration-test",
                "Principal": "connect.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:connect:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":instance/",
                            {
                                "Ref": "ConnectInstanceId"
                            }
                        ]
                    ]
                }
            }
        },
        "ServiceNowintegration-testExecutionPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "ServiceNowintegration-testExecutionPolicy",
                "Roles": [
                    {
                        "Ref": "ServiceNowintegration-testExecutionRole"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:logs:",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:logs:",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":log-group:/aws/lambda/ServiceNowintegration-test:*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "ServiceNowintegration-testExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "RoleName": "ServiceNowintegration-testExecutionRole"
            }
        },
        "ServiceNowintegration-test": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "tom.huguenard",
                    "S3Key": "connect-integration-servicenow-itsm/functions/packages/integration-test/lambda.zip"
                },
                "Description": "ServiceNow integration-test",
                "Environment": {
                    "Variables": {
                        "SERVICENOW_USERNAME": {
                            "Fn::Sub": "${ServiceNowUserName}"
                        },
                        "SERVICENOW_HOST": {
                            "Fn::Sub": "${ServiceNowHost}"
                        },
                        "SERVICENOW_PASSWORD": {
                            "Fn::Sub": "${ServiceNowPassword}"
                        }
                    }
                },
                "FunctionName": "ServiceNowintegration-test",
                "Handler": "index.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "ServiceNowintegration-testExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 10,
                "Runtime": "nodejs6.10"
            }
        },
        "KeepServiceNowintegration-testWarmEventRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": "ServiceNowintegration-test",
            "Properties": {
                "Description": "Keeps the lambdas warm by pinging them every (n)minutes.",
                "ScheduleExpression": "rate(10 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "ServiceNowintegration-test",
                                "Arn"
                            ]
                        },
                        "Id": "ServiceNowintegration-test",
                        "Input": "{\"keepwarm\": true}"
                    }
                ]
            }
        },
        "PermissionForServiceNowintegration-testEventRuleToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "ServiceNowintegration-test",
            "Properties": {
                "FunctionName": {
                    "Ref": "ServiceNowintegration-test"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "KeepServiceNowintegration-testWarmEventRule",
                        "Arn"
                    ]
                }
            }
        }
    }
}